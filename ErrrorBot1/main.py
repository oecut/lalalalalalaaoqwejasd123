# /ErrrorBot/main.py

import asyncio
import logging
import os

from aiogram import Bot, Dispatcher
from aiogram.enums import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.client.default import DefaultBotProperties

from config import bot_config
from app.services.database import db
from app.handlers import user_handlers, business_handlers, admin_handlers, group_handlers, private_handlers
from app.middlewares.throttling import ThrottlingMiddleware, cache

async def main():
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    logging.basicConfig(
        level=logging.INFO,
        format="%(asctime)s - %(levelname)s - %(name)s - %(message)s"
    )
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db_dir = 'database'
    if not os.path.exists(db_dir): 
        os.makedirs(db_dir)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    await db.initialize()

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π
    storage = MemoryStorage()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ —Å HTML-–ø–∞—Ä—Å–µ—Ä–æ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    bot = Bot(
        token=bot_config.token, 
        default=DefaultBotProperties(parse_mode=ParseMode.HTML)
    )
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
    dp = Dispatcher(storage=storage)

    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ middleware –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–ø–∞–º–∞
    dp.update.middleware(ThrottlingMiddleware(cache=cache))

    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤ (–ø–æ—Ä—è–¥–æ–∫ –≤–∞–∂–µ–Ω!)
    dp.include_router(admin_handlers.router)        # –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã (–≤—ã—Å—à–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
    dp.include_router(user_handlers.router)         # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã –∏ –º–µ–Ω—é
    dp.include_router(business_handlers.router)     # –ë–∏–∑–Ω–µ—Å-—Å–æ–æ–±—â–µ–Ω–∏—è (–ª–∏—á–Ω—ã–µ —á–∞—Ç—ã —á–µ—Ä–µ–∑ –±–∏–∑–Ω–µ—Å)
    dp.include_router(group_handlers.router)        # –ì—Ä—É–ø–ø–æ–≤—ã–µ —á–∞—Ç—ã
    dp.include_router(private_handlers.router)      # –õ–∏—á–Ω—ã–µ —á–∞—Ç—ã –±–æ—Ç–∞ (–ø–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)

    # –£–¥–∞–ª–µ–Ω–∏–µ –≤–µ–±—Ö—É–∫–∞ –µ—Å–ª–∏ –µ—Å—Ç—å
    await bot.delete_webhook(drop_pending_updates=True)

    try:
        logging.info("üëæ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        await dp.start_polling(bot)
    finally:
        logging.info("‚õî –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...")
        await bot.session.close()

if __name__ == '__main__':
    try:
        asyncio.run(main())
    except (KeyboardInterrupt, SystemExit):
        logging.info("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é.")