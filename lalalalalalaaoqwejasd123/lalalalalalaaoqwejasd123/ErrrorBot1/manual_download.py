#!/usr/bin/env python3
# –†—É—á–Ω–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –¥–∞—Ç–∞—Å–µ—Ç–æ–≤ —Å HuggingFace –≤ –ø–∞–ø–∫—É database

import os
import requests
from huggingface_hub import hf_hub_download, list_repo_files

def download_dataset_files(repo_id, save_to_folder="database"):
    """
    –°–∫–∞—á–∏–≤–∞–µ—Ç –≤—Å–µ —Ñ–∞–π–ª—ã –¥–∞—Ç–∞—Å–µ—Ç–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –ø–∞–ø–∫—É
    """
    try:
        print(f"üì• –°–∫–∞—á–∏–≤–∞–µ–º –¥–∞—Ç–∞—Å–µ—Ç: {repo_id}")
        
        # –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        os.makedirs(save_to_folder, exist_ok=True)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
        files = list_repo_files(repo_id, repo_type="dataset")
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö (–Ω–µ README, .gitattributes –∏ —Ç.–¥.)
        data_files = [f for f in files if f.endswith(('.parquet', '.csv', '.json', '.jsonl', '.txt'))]
        
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(data_files)} —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö:")
        for file in data_files:
            print(f"  - {file}")
        
        # –°–∫–∞—á–∏–≤–∞–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª
        downloaded_files = []
        for file in data_files:
            try:
                print(f"‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞–µ–º: {file}")
                
                # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
                local_path = hf_hub_download(
                    repo_id=repo_id,
                    filename=file,
                    repo_type="dataset",
                    local_dir=save_to_folder,
                    local_dir_use_symlinks=False
                )
                
                # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
                size = os.path.getsize(local_path) / (1024*1024)  # MB
                print(f"‚úÖ –°–∫–∞—á–∞–Ω: {file} ({size:.1f} MB)")
                downloaded_files.append(local_path)
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ {file}: {e}")
        
        print(f"\nüéâ –°–∫–∞—á–∞–Ω–æ {len(downloaded_files)} —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫—É '{save_to_folder}'")
        return downloaded_files
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return []

def download_specific_file(repo_id, filename, save_to_folder="database"):
    """
    –°–∫–∞—á–∏–≤–∞–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ñ–∞–π–ª –∏–∑ –¥–∞—Ç–∞—Å–µ—Ç–∞
    """
    try:
        print(f"üì• –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª: {filename} –∏–∑ {repo_id}")
        
        os.makedirs(save_to_folder, exist_ok=True)
        
        local_path = hf_hub_download(
            repo_id=repo_id,
            filename=filename,
            repo_type="dataset", 
            local_dir=save_to_folder,
            local_dir_use_symlinks=False
        )
        
        size = os.path.getsize(local_path) / (1024*1024)
        print(f"‚úÖ –§–∞–π–ª —Å–∫–∞—á–∞–Ω: {local_path} ({size:.1f} MB)")
        return local_path
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

if __name__ == "__main__":
    print("üì¶ –°–∫—Ä–∏–ø—Ç —Ä—É—á–Ω–æ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –¥–∞—Ç–∞—Å–µ—Ç–æ–≤ HuggingFace")
    print("=" * 60)
    
    # –°–∫–∞—á–∏–≤–∞–µ–º –¥–∞—Ç–∞—Å–µ—Ç –∫–æ—Ç–æ—Ä—ã–π –≤—ã –ø–æ–∫–∞–∑–∞–ª–∏ –Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ
    repo_id = "openai/gdpval"
    
    print(f"üéØ –°–∫–∞—á–∏–≤–∞–µ–º: {repo_id}")
    files = download_dataset_files(repo_id)
    
    if files:
        print(f"\nüìÅ –§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ 'database/':")
        for file in files:
            print(f"  ‚Ä¢ {file}")
    
    print("\n" + "=" * 60)
    print("üí° –î–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –¥—Ä—É–≥–∏—Ö –¥–∞—Ç–∞—Å–µ—Ç–æ–≤ –∑–∞–º–µ–Ω–∏—Ç–µ repo_id")
    print("   –ù–∞–ø—Ä–∏–º–µ—Ä: 'squad', 'imdb', 'emotion'")