#!/usr/bin/env python3
# –ü—Ä–æ—Å—Ç–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ —Å HuggingFace

import requests
import os

def download_file_simple(url, filename, folder="database"):
    """
    –ü—Ä–æ—Å—Ç–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø–æ –ø—Ä—è–º–æ–π —Å—Å—ã–ª–∫–µ
    """
    try:
        print(f"üì• –°–∫–∞—á–∏–≤–∞–µ–º: {filename}")
        
        # –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É
        os.makedirs(folder, exist_ok=True)
        
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        response = requests.get(url, stream=True)
        response.raise_for_status()
        
        filepath = os.path.join(folder, filename)
        
        with open(filepath, 'wb') as f:
            for chunk in response.iter_content(chunk_size=8192):
                f.write(chunk)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä
        size = os.path.getsize(filepath) / (1024*1024)
        print(f"‚úÖ –°–∫–∞—á–∞–Ω: {filepath} ({size:.1f} MB)")
        return filepath
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

if __name__ == "__main__":
    print("üì¶ –ü—Ä–æ—Å—Ç–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Å HuggingFace")
    print("=" * 50)
    
    # –ü—Ä–∏–º–µ—Ä –ø—Ä—è–º—ã—Ö —Å—Å—ã–ª–æ–∫ –Ω–∞ —Ñ–∞–π–ª—ã —Å HuggingFace
    # –î–ª—è –¥–∞—Ç–∞—Å–µ—Ç–∞ openai/gdpval (–∫–æ—Ç–æ—Ä—ã–π –Ω–∞ –≤–∞—à–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç–µ)
    files_to_download = [
        {
            "url": "https://huggingface.co/datasets/openai/gdpval/resolve/main/data/train-00000-of-00001-d52c0ad0a0f92c33.parquet",
            "filename": "gdpval_train.parquet"
        }
    ]
    
    # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª—ã
    for file_info in files_to_download:
        download_file_simple(file_info["url"], file_info["filename"])
    
    print("\nüí° –ö–∞–∫ –Ω–∞–π—Ç–∏ –ø—Ä—è–º—ã–µ —Å—Å—ã–ª–∫–∏:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ –¥–∞—Ç–∞—Å–µ—Ç –Ω–∞ HuggingFace")
    print("2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É 'Files and versions'") 
    print("3. –©—ë–ª–∫–Ω–∏—Ç–µ –ø—Ä–∞–≤–æ–π –∫–Ω–æ–ø–∫–æ–π –Ω–∞ —Ñ–∞–π–ª ‚Üí '–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∞–¥—Ä–µ—Å —Å—Å—ã–ª–∫–∏'")
    print("4. –í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –≤ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç")